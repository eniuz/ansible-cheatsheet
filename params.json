{"name":"Ansible-cheatsheet","tagline":"Keeping Notes, I'm not a genius","body":"# Ansible Cheatsheet\r\nCliff notes bro, I'm not a genius.\r\n\r\n- [Definitions](#definitions) \r\n  - [The Basics](#the-basics)\r\n  - [More Features](#more-features)\r\n- [Example Layouts](#example-layouts)\r\n  - [Simple](#simple)\r\n  - [Advanced](#advanced)\r\n  - [Host](#host)\r\n  - [Playbook](#playbook)\r\n- [Run Playbooks](#run-playbooks)\r\n  - [Reboot One Server](#reboot-one-server)\r\n  - [Ad-Hoc Commands](#ad-hoc-commands)\r\n  - [Paralell Running](#paralell-running)\r\n- [Security](#security)\r\n  - [Encrypt a Password](#encrypt-a-password)\r\n  - [Encrypt a Vault](#encrypt-a-vault)\r\n\r\n# Definitions\r\n\r\n### The Basics\r\n| Format | Type | Description |\r\n|---|---|---|\r\n| ini | Inventory | file to describe a host |\r\n| yml | Playbooks | The main configurations for each section |\r\n| yml | Plays | A single item inside a playbook, eg: install nginx. |\r\n| j2 | Templates | Templates with optional variable configurations in Jinja2 format |\r\n\r\n### More Features\r\n| Format | Type | Description |\r\n|---|---|---|\r\n| yml | Tags | Can add to almost anything, add to your Plays to SSH only certain items. |\r\n| yml | Roles | Apply any Rules to different Playbooks |\r\n| yml | Handlers | A separate area that accepts the \"notify\" command. |\r\n| yml | Notify | Add to a Play and it will trigger whatever the Handler does. |\r\n\r\n# Example Layouts\r\n\r\n### Simple\r\n```\r\n/roles/\r\n  /apache2/  <-- Folder format for all your roles\r\n    /tasks/\r\n      main.yml\r\nvars.yml <-- optional\r\nhosts\r\nplaybook.yml\r\n```\r\n\r\n### Advanced\r\n```\r\n/handlers/\r\n  services.yml <-- Reboot Apache, SSH, etc\r\n  .. Can have many\r\n/roles/\r\n  /apache2/\r\n    /files/\r\n      anything\r\n    /tasks/\r\n      main.yml (The main guy)\r\n    /templates/\r\n      vhost.j2\r\n/vars/ (Or you can have one single vars file)\r\n  apache.yml\r\nhosts <-- INI format\r\nplaybook.yml <-- The main runner!\r\n```\r\n\r\n### Host\r\nThis would be called `host` in the root folder:\r\n```\r\n[websites]\r\ndallas   site-a.com\r\nboston   site-b.com:3333\r\n\r\n[targets]\r\nlocalhost       ansible_connection=local\r\nsite-a.com      ansible-connection=ssh\r\nsite-a.com      ansible_connection=ssh\r\n```\r\n\r\n### Playbook\r\nA playbook runs roles, you might have something like this:\r\n```\r\n---\r\n- name: Provision Webserver\r\n  hosts: all\r\n  user: root   # Deploying as root will require --ask-sudo-pass\r\n  sudo: true\r\n  gather_facts: yes  # http://docs.ansible.com/ansible/playbooks_variables.html\r\n  vars_files:\r\n    - vars/apache.yml\r\n  vars:  # Dynamically set variables too\r\n    - { is_vagrant: false }\r\n\r\n  # Where all the rules run, you can optionally do this without the tags like:\r\n  # roles:\r\n  # - role: core\r\n  # - role: host\r\n  # - role: apache2\r\n  roles:  \r\n    - { role: core, tags: ['core'] }\r\n    - { role: host, tags: ['host'] }\r\n    - { role: apache2, tags: ['apache2', 'apache'] }\r\n\r\n  # If you are using handlers to notify events\r\n  handlers:\r\n    - include: handlers/services.yml\r\n```\r\n\r\n# Run Playbooks\r\nYou can use `-vvv` and `-vvvv` for verbose output. In these cases pretend we have a `hosts` file with `production` group with two servers: `dallas` and `boston`.\r\n  \r\n```\r\n  ansible-playbook -i dallas site.yml\r\n  ansible-playbook -i dallas playbook.yml --ask-sudo-pass\r\n```\r\n\r\n```\r\n  ansible-playbook -i dallas playbook.yml\r\n  ansible-playbook -i -vvv dallas playbook.yml --tags anything_you_tagged\r\n  ansible-playbook playbook.yml --skip-tags \"anything_you_tagged\"\r\n```\r\n  \r\n### Reboot One Server\r\nYou could reboot only a boston server from the hosts file with:\r\n\r\n```\r\n  ansible-playbook -i production webservers.yml --limit boston\r\n```\r\n\r\n### Ad-Hoc Commands\r\n\r\n```\r\n  ansible boston -i production -m ping\r\n  ansible boston -i production -m command -a '/sbin/reboot'\r\n```\r\n### Paralell Running\r\n\r\n  ansible-playbook playbook.yml -f 10\r\n\r\n#Security\r\n\r\n### Encrypt a Password\r\nCopy and paste the password you create from here:\r\n\r\n```\r\n   mkssh_userpass --method=SHA-512\r\n```\r\n\r\n### Encrypt a Vault\r\nYou can `pip install cryptography` for faster speeds.\r\nTo encrypt sensitive data run:\r\n\r\n```\r\n  ansible-vault encrypt keydata.yml\r\n```\r\n\r\nTo decrypt it while running your playbook \r\n\r\n```\r\n  ansible-playbook test.yml --ask-vault-pass\r\n```  \r\n","google":"UA-3106599-2","note":"Don't delete this file! It's used internally to help with page regeneration."}